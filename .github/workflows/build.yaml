name: Builder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
    PYTHON-VERSION: 3.11
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    FACTORIO_VERSION: 1.1.87

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON-VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON-VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry update
          poetry install
      - name: Generate requirements.txt
        run: |
          set -eux
          mkdir -p ${GITHUB_WORKSPACE}/dist
          # Prepare requirements.txt for dependencies
          poetry export -f requirements.txt --output ${GITHUB_WORKSPACE}/dist/requirements.txt --without=dev,test --with-credentials
          ls ${GITHUB_WORKSPACE}/dist/
      - name: Build Wheels for Dependencies
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/dist/wheels
          # Build wheels for dependencies
          pip wheel -r ${GITHUB_WORKSPACE}/dist/requirements.txt --wheel-dir ${GITHUB_WORKSPACE}/dist/wheels
          ls ${GITHUB_WORKSPACE}/dist/wheels
      - name: Build Wheel for Package
        run: |
          # Build wheel for package
          poetry build --directory=${GITHUB_WORKSPACE} -f wheel
          ls ${GITHUB_WORKSPACE}/dist/
          mv ${GITHUB_WORKSPACE}/dist/*.whl ${GITHUB_WORKSPACE}/dist/wheels
          ls ${GITHUB_WORKSPACE}/dist/wheels
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg FACTORIO_VERSION=${FACTORIO_VERSION} \
            --build-arg FACTORIO_SAVE_PATH=/opt/app/saves/save.zip \
            -t ${IMAGE_NAME}:${GITHUB_SHA} \
            ${GITHUB_WORKSPACE}
          docker tag ${IMAGE_NAME}:${GITHUB_SHA} ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker tag ${IMAGE_NAME}:${GITHUB_SHA} ${IMAGE_NAME}:latest
          docker tag ${IMAGE_NAME}:${GITHUB_SHA} ${REGISTRY}/${IMAGE_NAME}:latest
      - name: Push Docker Image
        run: |
          docker push ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker push ${REGISTRY}/${IMAGE_NAME}:latest